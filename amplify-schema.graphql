type Request @model @auth(rules: [{ allow: private }]) {
  id: ID!
  publisher_email: String!
  requester_email: String!
  requester_name: String!
  publisher_name: String
  publisher_domain: String
  status: String!
  token: String!
  created_at: AWSDateTime!
  updated_at: AWSDateTime
  messages: [Message] @hasMany(fields: ["id"])
  adsTxtRecords: [AdsTxtRecord] @hasMany(fields: ["id"])
}

type Message @model @auth(rules: [{ allow: private }]) {
  id: ID!
  request_id: ID!
  content: String!
  sender_email: String!
  created_at: AWSDateTime!
  updated_at: AWSDateTime
  request: Request @belongsTo(fields: ["request_id"])
}

type AdsTxtRecord @model @auth(rules: [{ allow: private }]) {
  id: ID!
  request_id: ID!
  domain: String!
  account_id: String!
  account_type: String!
  relationship: String!
  certification_authority_id: String
  status: String!
  created_at: AWSDateTime!
  updated_at: AWSDateTime
  request: Request @belongsTo(fields: ["request_id"])
}

type AdsTxtCache @model @auth(rules: [{ allow: private }]) {
  id: ID!
  domain: String! @index
  content: String!
  status: String!
  error_message: String
  last_updated: AWSDateTime!
  created_at: AWSDateTime!
  updated_at: AWSDateTime
}

type SellersJsonCache @model @auth(rules: [{ allow: private }]) {
  id: ID!
  domain: String! @index
  content: String!
  status: String!
  error_message: String
  last_updated: AWSDateTime!
  created_at: AWSDateTime!
  updated_at: AWSDateTime
}