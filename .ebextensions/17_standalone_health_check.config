files:
  "/opt/elasticbeanstalk/hooks/appdeploy/post/99_start_health_server.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      
      # Create a simple standalone health check server
      cat > /tmp/health-server.js << 'EOL'
      const http = require('http');
      
      // Create a simple HTTP server that always responds with a 200 status
      const server = http.createServer((req, res) => {
        console.log(`Health check request received: ${req.method} ${req.url}`);
        
        res.writeHead(200, { 'Content-Type': 'application/json' });
        res.end(JSON.stringify({
          status: 'ok',
          timestamp: new Date().toISOString(),
          message: 'Health check server is running'
        }));
      });
      
      // Listen on port 8081
      server.listen(8081, () => {
        console.log('Standalone health check server listening on port 8081');
      });
      EOL
      
      # Start the health check server as a background process
      cd /tmp
      node health-server.js > /var/log/health-server.log 2>&1 &
      
      # Save the PID
      echo $! > /var/run/health-server.pid
      
      # Ensure it's running
      sleep 2
      if ps -p $(cat /var/run/health-server.pid) > /dev/null; then
        echo "Health check server started successfully with PID $(cat /var/run/health-server.pid)"
      else
        echo "Failed to start health check server"
        exit 1
      fi
      
      # Verify the server is accepting connections
      curl -s http://localhost:8081 > /dev/null
      if [ $? -eq 0 ]; then
        echo "Health check server is accepting connections"
      else
        echo "Health check server is not accepting connections"
        exit 1
      fi
      
      exit 0

container_commands:
  01_create_health_check_routes:
    command: |
      # Add explicit health check endpoint to the Express app in case the standalone server fails
      cat >> /var/app/staging/backend/src/app.ts << 'EOL'
      
      // Additional health check route for ELB
      app.get('/elb-health', (req, res) => {
        res.status(200).json({ status: 'ok', timestamp: new Date().toISOString() });
      });
      EOL
      
      # Rebuild TypeScript
      cd /var/app/staging/backend
      ./node_modules/.bin/tsc